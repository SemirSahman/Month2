package ba.bitcamp.week6.day2.ObjectOrientedProgramming;

public class Computer {

	private String name;
	private MACAddress macAddress;

	public Computer(String name, char[] macAddress) {
		super();
		this.name = name;
		this.macAddress = new MACAddress(macAddress);
	}

	public Computer() {
		super();
		this.name = "Computer";

		char[] arr = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a',
				'b' };
		this.macAddress = new MACAddress(arr);
	}

	@Override
	public String toString() {
		return "Computer [name=" + name + ", macAddress=" + macAddress + "]";
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Computer other = (Computer) obj;
		if (macAddress == null) {
			if (other.macAddress != null)
				return false;
		} else if (!macAddress.equals(other.macAddress))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public MACAddress getMacAddress() {
		return macAddress;
	}

	public void setMacAddress(MACAddress macAddress) {
		this.macAddress = macAddress;
	}

	public class MACAddress {

		char[] address; // 0123456789ab

		public MACAddress(char[] address) {
			this.address = address;
		}

		@Override
		// 01:23:45:67:89:ab
		public String toString() {
			String s = "";
			for (int i = 0; i < address.length; i++) {
				if (i % 3 == 0) {
					s += ":";
				}
				s += address[i];
			}

			return s;

		}

	}

}
